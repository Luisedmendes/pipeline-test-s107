name: CI/CD Pipeline

on: [push]

env:
    API_URL: ${{ secrets.API_URL }}
    EMAIL: ${{ secrets.EMAIL }}
    MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
    # MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
    REDIS_HOST: ${{ secrets.REDIS_HOST }}
    MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
    MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
    MYSQL_USER: ${{ secrets.MYSQL_USER }}
    NODE_ENV: ${{ secrets.NODE_ENV }}
    PORT: ${{ secrets.PORT }}
    REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
    REDIS_PORT: ${{ secrets.REDIS_PORT }}
    REDIS_PREFIX: ${{ secrets.REDIS_PREFIX }}


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create .env file
      run: |
        echo PORT=${{ secrets.PORT }} >> .env
        echo API_URL=http://localhost:${{ secrets.PORT }} >> .env
        echo NODE_ENV=test >> .env
        echo MYSQL_PORT=${{ secrets.MYSQL_PORT }} >> .env
        echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
        echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
        echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
        echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
        echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
        echo REDIS_PREFIX=${{ secrets.REDIS_PREFIX }} >> .env
  
    - name: Install dependencies
      run: npm install
    - name: Run docker images
      run: docker-compose up -d  
    - name: Wait for MySQL
      run: |
        while ! nc -z database ${{ secrets.MYSQL_PORT }}; do
          echo "Waiting for MySQL..."
          sleep 1
        done
    - name: Wait for Redis
      run: |
        while ! nc -z redis ${{ secrets.REDIS_PORT }}; do
          echo "Waiting for Redis..."
          sleep 1
        done
    - name: Run api and tests
      run: | 
        yarn dev & 
        sleep 10
        yarn test  
    


  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build
  #     run: npm run build
  #   - name: Archive production artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: dist
  #       path: dist/

  # notify:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Send email
  #     run: node send_email.js
